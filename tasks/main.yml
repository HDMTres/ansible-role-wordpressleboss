# SPDX-License-Identifier: MIT-0

- name: Installer Apache et PHP sur Ubuntu
  ansible.builtin.apt:
    name: 
      - apache2
      - php
      - libapache2-mod-php
      - php-mysql
      - unzip
      - mariadb-server
      - python3-pymysql
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Installer Apache et PHP sur Rocky
  ansible.builtin.dnf:
    name:
      - httpd
      - php
      - php-mysqlnd
      - unzip
      - mariadb-server
      - python3-PyMySQL
    state: present
  when: ansible_os_family == "RedHat"

- name: Detecter Conteneur
  ansible.builtin.stat:
    path: /.dockerenv
  register: is_container

# === DEMARRAGE SERVICES ===
- name: Initialiser MySQL sur Rocky conteneur
  ansible.builtin.shell: |
    mysql_install_db --user=mysql --datadir=/var/lib/mysql
  when: ansible_os_family == "RedHat" and is_container.stat.exists
  ignore_errors: yes

- name: Demarrer MySQL sur Rocky conteneur
  ansible.builtin.shell: |
    mysqld_safe --user=mysql --datadir=/var/lib/mysql &
  when: ansible_os_family == "RedHat" and is_container.stat.exists
  async: 15
  poll: 0
  ignore_errors: yes

- name: Demarrer Apache sur Rocky conteneur
  ansible.builtin.shell: |
    /usr/sbin/httpd &
  when: ansible_os_family == "RedHat" and is_container.stat.exists
  async: 10
  poll: 0
  ignore_errors: yes

- name: Demarrer MySQL sur Ubuntu
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true
  when: ansible_os_family == "Debian"

- name: Demarrer Apache sur Ubuntu
  ansible.builtin.service:
    name: apache2
    state: started
    enabled: true
  when: ansible_os_family == "Debian"

- name: Attendre que MySQL soit pret
  ansible.builtin.wait_for:
    port: 3306
    host: localhost
    timeout: 60

- name: Activer module rewrite Apache sur Ubuntu
  ansible.builtin.command: a2enmod rewrite
  when: ansible_os_family == "Debian"
  ignore_errors: yes

# === CREER BASE DE DONNEES ===
- name: Creer base WordPress sur Rocky conteneur
  ansible.builtin.shell: |
    mysql -e "CREATE DATABASE IF NOT EXISTS wordpress;"
    mysql -e "CREATE USER IF NOT EXISTS 'wordpress_user'@'localhost' IDENTIFIED BY 'MotDePasseFort123!';"
    mysql -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress_user'@'localhost';"
    mysql -e "FLUSH PRIVILEGES;"
  when: ansible_os_family == "RedHat" and is_container.stat.exists
  ignore_errors: yes

# === INSTALLER WORDPRESS ===
- name: Telecharger WordPress
  ansible.builtin.get_url:
    url: "https://wordpress.org/latest.zip"
    dest: /tmp/wordpress.zip

- name: Creer dossier temporaire
  ansible.builtin.file:
    path: /tmp/wordpress-temp
    state: directory

- name: Decompresser WordPress
  ansible.builtin.unarchive:
    src: /tmp/wordpress.zip
    dest: /tmp/wordpress-temp/
    remote_src: true

- name: Copier WordPress vers Apache
  ansible.builtin.copy:
    src: /tmp/wordpress-temp/wordpress/
    dest: /var/www/html/
    remote_src: true
    owner: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
    group: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
    mode: '0755'

- name: Nettoyer fichiers temporaires
  ansible.builtin.file:
    path: /tmp/wordpress-temp
    state: absent

- name: Corriger proprietaire WordPress
  ansible.builtin.file:
    path: /var/www/html
    owner: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
    group: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
    recurse: true

# === CONFIGURER WORDPRESS ===
- name: Configurer wp-config sur Rocky
  ansible.builtin.shell: |
    if [ ! -f /var/www/html/wp-config.php ]; then
      cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
      sed -i "s/database_name_here/wordpress/g" /var/www/html/wp-config.php
      sed -i "s/username_here/wordpress_user/g" /var/www/html/wp-config.php
      sed -i "s/password_here/MotDePasseFort123!/g" /var/www/html/wp-config.php
    fi
  when: ansible_os_family == "RedHat" and is_container.stat.exists
  ignore_errors: yes

- name: Supprimer page Apache par defaut
  ansible.builtin.file:
    path: /var/www/html/index.html
    state: absent
  ignore_errors: yes

- name: Redemarrer Apache sur Ubuntu
  ansible.builtin.service:
    name: apache2
    state: restarted
  when: ansible_os_family == "Debian"
  ignore_errors: yes

- name: Redemarrer Apache sur Rocky
  ansible.builtin.shell: |
    pkill httpd || true
    sleep 3
    /usr/sbin/httpd
  when: ansible_os_family == "RedHat" and is_container.stat.exists
  ignore_errors: yes

- name: Verifier Apache sur Rocky
  ansible.builtin.wait_for:
    port: 80
    host: localhost
    timeout: 30
  when: ansible_os_family == "RedHat" and is_container.stat.exists
  ignore_errors: yes
